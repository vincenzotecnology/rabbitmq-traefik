version: '3.3'
services:
  rabbitmq1:
    image: rabbitmq:3-management
    hostname: rabbitmq1
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    volumes:
      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.${DOMAIN_NAME?Variable not set}`)
        - traefik.http.routers.rabbitmq-http.entrypoints=http
        - traefik.http.routers.rabbitmq-http.middlewares=https-redirect
        - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
        - traefik.http.routers.rabbitmq-https.rule=Host(`rabbitmq.${DOMAIN_NAME?Variable not set}`)
        - traefik.http.routers.rabbitmq-https.entrypoints=https
        - traefik.http.routers.rabbitmq-https.tls=true
        - traefik.http.routers.rabbitmq-https.tls.certresolver=le
        - traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq
        - traefik.tcp.services.rabbitmq.loadbalancer.server.port=5672
    networks:
      - net
      - traefik-public
  rabbitmq2:
    image: rabbitmq:3-management
    hostname: rabbitmq2
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.tcp.routers.rabbitmq.rule=HostSNI(`*`)
        - traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq
        - traefik.tcp.services.rabbitmq.loadbalancer.server.port=5672
    networks:
      - net
  rabbitmq3:
    image: rabbitmq:3-management
    hostname: rabbitmq3
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
          - traefik.enable=true
          - traefik.docker.network=traefik-public
          - traefik.constraint-label=traefik-public
          - traefik.tcp.routers.rabbitmq.rule=HostSNI(`*`)
          - traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq
          - traefik.tcp.services.rabbitmq.loadbalancer.server.port=5672
    networks:
      - net
networks:
  net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true